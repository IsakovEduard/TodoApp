openapi: 3.0.1
info:
  title: Task API
  version: 1.0.0
paths:
  /task-management/{userId}:
    get:
      description:
        Get tasks by filter. If no filter passed retrieves all tasks
      operationId: getTasksByFilter
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: filter
          in: query
          style: deepObject   # tells OpenAPI to expand object keys
          explode: true
          required: false
          schema:
            $ref: '#/components/schemas/V1SearchFilter'

      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1Task'
    post:
      summary: Create a new task
      operationId: createTask
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateTaskInput'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                type: string
                example: "Task created successfully"
    delete:
      operationId: deleteTask
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1DeleteTaskInput'
      responses:
        '200':
          description: Removed task ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

components:
  schemas:
    V1Task:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
          example: Study new technology
        description:
          type: string
        urgency:
            $ref: '#/components/schemas/V1Urgency'
        dueDate:
          type: string
          format: date-time
          example: "2025-09-06T22:30:00"
        createdAt:
          type: string
          format: date-time
          example: "2025-09-06T22:30:00"
        status:
            $ref: '#/components/schemas/V1Status'
        activationStatus:
            $ref: '#/components/schemas/V1ActivationStatus'

    V1CreateTaskInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        urgency:
          $ref: '#/components/schemas/V1Urgency'
        dueDate:
          type: string
          format: date-time
          example: "2025-09-06T22:30:00"
#          format: date
#          description: Due date of the task (yyyy-MM-dd)
#          example: "2025-09-10"
    V1DeleteTaskInput:
      type: object
      properties:
        taskIds:
          type: array
          items:
            type: string
      required:
        - taskIds

    V1Urgency:
      type: string
      enum:
        - LOW
        - NORMAL
        - HIGH
    V1Status:
        type: string
        enum:
          - IN_PROGRESS
          - COMPLETED
    V1ActivationStatus:
      type: string
      enum:
        - AC
        - DE

    V1SearchFilter:
      type: object
      properties:
        taskId:
          type: string
        status:
          $ref: '#/components/schemas/V1Status'
        urgency:
          $ref: '#/components/schemas/V1Urgency'

